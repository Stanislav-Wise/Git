print('Hello world')

Инструкция по гиту
Инициализация репозитория
git init

Создать пустой репозиторий Git или вновь инициализировать существующий можно параметром init. При инициализации он создаст скрытую папку. В ней содержатся все объекты и ссылки, которые Git использует и создаёт в истории работы над проектом.

Добавить файл или файлы к следующему коммиту
git add .

Добавить отдельный файл в область подготовленных файлов можно параметром add с указанием имени файла.

Создание коммита
git commit -m “message”

Команда git commit берёт все данные, добавленные в индекс с помощью git add, и сохраняет их слепок во внутренней базе данных, а затем сдвигает указатель текущей ветки на этот слепок. При создании коммита в репозитории можно добавить однострочное сообщение с помощью параметра commit с флагом -m. Само сообщение вводится непосредственно после флага, в кавычках.

Проверка статуса репозитория
git status

Просмотреть статус нужного репозитория можно по ключевому слову status: его действие распространяется на подготовленные, неподготовленные и неотслеживаемые файлы.

Просмотр истории коммитов с изменениями
git log

Просматривать изменения, внесённые в репозиторий, можно с помощью параметра log. Он отображает список последних коммитов в порядке выполнения

Просмотр изменений до коммита
git diff

Можно просматривать список изменений, внесённых в репозиторий, используя параметр diff. По умолчанию отображаются только изменения, не подготовленные для фиксации

Переход от одного коммита к другому
git checkout ####

Команда git checkout используется для переключения веток и выгрузки их содержимого в рабочую директорию. #### первые 4 символа коммита.

Вернуться к актуальному состоянию и продолжить
git checkout master

Посмотреть список веток в репозитории
git branch

Создать новую ветку
git branch <название ветки>

Соединение веток
git merge <название ветки>

Соединяет информацию из указанной ветки в ветку в которой находимся

Переход к другой ветке
git checkout <название ветки>

Удалить ветку
git branch -d <название ветки>

Визуализация веток
git log --graph

Файл игнор
.gitignor

Добавить в файл все что хотим игнорировать

Добавление удалённого репозитория
git remote add

Отправка изменений в удалённый репозиторий
git push

Получение изменений из удалённого репозитория
git pull